{% extends "Commercial/common.twig" %}

{% set title = {
                'title': "Edit a purchase invoice"|trans,
                'help': "Fill all information about the invoice"|trans} %}

{% block content %}{{ parent() }}



<div class="row-fluid">
  <div class="span5" id="sidebar">
      <div class="well">
          <form id="form_data" class="ajax-emulation-validation" method='post' action=''>
              <fieldset>
                  <legend>{% trans %}Document information{% endtrans %}</legend>
                  {{ forms.select('providerUser', 'Creditor'|trans, usersList, providerInvoice.providerUser.id, 'id', 'userLabel') }}
                  {{ forms.select('soldType', 'Payment mode'|trans, soldTypeList, providerInvoice.invoicePaymentType.code, 'code', 'label') }}
                  {{ forms.input('invoiceNum', 'Invoice number'|trans, providerInvoice.invoiceNum) }}
                  {{ forms.date('invoiceDate', 'Invoice date'|trans, providerInvoice.invoiceDate) }}
 
                  <legend>{% trans %}Document amounts{% endtrans %}</legend>
                  
                  <div id="ProviderInvoicesEditAmountTableDiv" style="text-align: center;">
                    {% include 'Commercial/ajax/ProviderInvoicesEditAmountTableDiv.twig' %}
                  </div>
                  
                  
                  <div class="form-actions">
                      <button type="submit" class="btn btn-primary">{% trans %}Save changes{% endtrans %}</button>
                      <input class="btn cancel" type="button" value="{% trans %}Cancel{% endtrans %}" onclick="javascript:history.go(-1);return true;">
                  </div>
              </fieldset>
          </form>
      </div>
  </div>

  <div class="span7" style="height: 700px;">
      <iframe src="{{ url("commercial_provider_invoices_download", {"Id" : providerInvoice.id, "ForceDl" : 0 }) }}" width="100%"></iframe>
  </div>
</div>


{# Modal to add / edit an amount #}
<div id="provider-invoice-edit-amount-modal" class="modal hide fade">
    <form action="" method="post" class="modal-form ajax-emulation-validation">
        <div class="modal-header">
           <button type="button" class="close" data-dismiss="modal">&times;</button>
           <h3>{% trans %}Add or edit an amount{% endtrans %}</h3>
        </div>
        <div class="modal-body">
            {# Ajax content will be loaded there #}
        </div>
        <div class="modal-footer">
            <a href="#" class="btn" data-dismiss="modal" >Close</a>
            <button type="submit" class="btn btn-primary">{% trans %}Save{% endtrans %}</button>
        </div>
    </form>
</div>

<div id="add-form" style="display: none">
    {% include 'Commercial/ajax/ModalContentProviderInvoiceAmountAdd.twig' %}
</div>


<script>
    igestisCommercial.editPopover = null;
    igestisCommercial.initPopover = function() {
        $(".popover").remove();
        igestisCommercial.editPopover = $('.edit-amount-btn').popover({ 
            html : true,
            container: "#sidebar",
            placement:"top",
            title: function() {
              return "{% trans %}Add or edit an amount{% endtrans %}";
            },
            content: function() {
              return "<div id=\"add-project-content\">" + $("#add-form").html() + "</div>";
            }
        });

        $('.edit-amount-btn').on('show', function (e) {
            $("#add-project-content").html("{% trans %}Loading form {% endtrans %}");
            var self = this;
            $.get( $(this).data("url"), function( data ) {
                $("#add-project-content").html(data);
                $("#add-project-content form").attr("action", $(self).data("url"));
                igestisCommercial.refreshAjaxForm();
                igestisCommercial.testAddEditForm();
            });
        });
    };
    
    $(function() {
        $("#add-new-or-edit-amount").removeAttr("id");
        igestisCommercial.providerInvoices.init({        
            amountDeleteLink : '{{ url('commercial_provider_invoices_del_amount', {Id:''} ) }}'
        });
        igestisCommercial.initPopover();
        {% if providerInvoice.isLocked %}igestisLockPage('{{ 'This invoice is in read only mode. It has already been exported'|trans|escape('js') }}');{% endif %}
    });
    
    
    
    $(document).ready(function(){
                $("#form_data").validate({
                        ignore: "input[type='text']:hidden",
                        rules:{

                                providerUser:{
                                        required:true
                                },
                                soldType:{
                                        required:true
                                },
                                invoiceNum:{
                                        required:true
                                },
                                invoiceDate:{
                                        required:true
                                }
                        },
                        errorClass: "help-inline",
                        errorElement: "span",
                        errorPlacement: function(error, element) {
                            element.parent().after(error);
                        },
                        highlight:function(element, errorClass, validClass) {
                                $(element).parents('.control-group').removeClass('success');
                                $(element).parents('.control-group').addClass('error');
                        },
                        unhighlight: function(element, errorClass, validClass) {
                                $(element).parents('.control-group').removeClass('error');
                                $(element).parents('.control-group').addClass('success');
                        }
                });
        });
        
        
        igestisCommercial.testAddEditForm = function() {
            $("#add-new-or-edit-amount").submit(function(e) {
                e.preventDefault();
            }).validate({
                 ignore: "input[type='text']:hidden",
                 rules:{
                     purchasingAccount:{
                             required:true
                     },
                     amountTi:{
                             required:true
                     },
                     taxes: {
                         required: {
                             depends:function() {
                                 return !$('#id-amountDf').val();
                             }
                         }

                     },
                     amountDf: {
                         required: {
                             depends:function() {
                                 return !$('#id-taxes').val();
                             }
                         }                    
                     }
                 },
                 errorClass: "help-inline",
                 errorElement: "span",
                 errorPlacement: function(error, element) {
                         element.parent().after(error);
                 },
                 highlight:function(element, errorClass, validClass) {
                         $(element).parents('.control-group').removeClass('success');
                         $(element).parents('.control-group').addClass('error');
                 },
                 unhighlight: function(element, errorClass, validClass) {
                         $(element).parents('.control-group').removeClass('error');
                         $(element).parents('.control-group').addClass('success');
                 },
                 submitHandler: function(form) {
                     if($('#id-taxes').val() && $('#id-amountDf').val()) {
                         if(parseFloat($('#id-amountTi').val()).toFixed(2) !== parseFloat(parseFloat($('#id-amountDf').val()) + parseFloat($('#id-taxes').val())).toFixed(2)) {
                             var errors = {
                                 taxes: '{{ "Set only one of the two fields"|trans|e('js') }}',
                                 amountDf: '{{ "Set only one of the two fields"|trans|e('js') }}'    
                             };
                             this.showErrors(errors);
                             return;
                         }                    
                     }
                     form.submit();
                     $(".popover").find("button, a").addClass("disabled").attr("disabled", "disabled").unbind("click").bind("click", function(e) { 
                        e.preventDefault(); 
                     });
                 },
                 messages: {
                     taxes: '{{ "Set taxes or amount without taxes"|trans|e('js') }}',
                     amountDf: '{{ "Set taxes or amount without taxes"|trans|e('js') }}'
                 }
             }); 
        };
</script>


{% endblock %}
